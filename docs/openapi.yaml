openapi: 3.1.0
info:
  title: Chatbot
  description: chatbot API.
  version: 0.1.0
paths:
  /health:
    get:
      tags:
      - health
      summary: liveness check
      description: returns 200 when the app is alive
      operationId: health_health_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
  /api/v1/secure:
    get:
      tags:
      - secure
      summary: Secure Route
      operationId: secure_route_api_v1_secure_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /api/v1/conversation:
    post:
      tags:
      - conversations
      summary: Create a new conversation
      description: "Creates a new conversation for the authenticated user.\n     \
        \                   - Requires a `title` in the request\n                \
        \        - Conversation Status is Active when created\n                  \
        \      - return the conversation ID and metadata with a stauts code of 201\
        \ when successful"
      operationId: create_conversation_api_v1_conversation_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConversationRequest'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateConversationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/conversations:
    get:
      tags:
      - conversations
      summary: get latest `n` conversations
      operationId: get_conversations_api_v1_conversations_get
      parameters:
      - name: skip
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          description: Number of records to skip
          default: 0
          title: Skip
        description: Number of records to skip
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 100
          minimum: 1
          description: Maximum number of records to return
          default: 10
          title: Limit
        description: Maximum number of records to return
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetConversationsResponse'
                title: Response Get Conversations Api V1 Conversations Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/conversation/{id}:
    patch:
      tags:
      - conversations
      summary: Update a conversation(status and title)
      operationId: update_conversation_api_v1_conversation__id__patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConversationRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateConversationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    ConversationStatus:
      type: string
      enum:
      - active
      - archived
      title: ConversationStatus
    CreateConversationRequest:
      properties:
        title:
          type: string
          title: Title
      type: object
      required:
      - title
      title: CreateConversationRequest
    CreateConversationResponse:
      properties:
        status:
          type: string
          title: Status
        conversation_id:
          type: string
          format: uuid
          title: Conversation Id
        title:
          type: string
          title: Title
        created_at:
          type: string
          title: Created At
      type: object
      required:
      - status
      - conversation_id
      - title
      - created_at
      title: CreateConversationResponse
    GetConversationsResponse:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        title:
          type: string
          title: Title
        status:
          $ref: '#/components/schemas/ConversationStatus'
        created_at:
          type: string
          format: date-time
          title: Created At
      type: object
      required:
      - id
      - title
      - status
      - created_at
      title: GetConversationsResponse
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    HealthResponse:
      properties:
        status:
          type: string
          title: Status
        service:
          type: string
          title: Service
        time:
          type: string
          format: date-time
          title: Time
      type: object
      required:
      - status
      - service
      - time
      title: HealthResponse
    UpdateConversationRequest:
      properties:
        title:
          anyOf:
          - type: string
          - type: 'null'
          title: Title
        status:
          anyOf:
          - $ref: '#/components/schemas/ConversationStatus'
          - type: 'null'
      type: object
      title: UpdateConversationRequest
    UpdateConversationResponse:
      properties:
        title:
          type: string
          title: Title
        id:
          type: string
          format: uuid
          title: Id
        status:
          $ref: '#/components/schemas/ConversationStatus'
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
      type: object
      required:
      - title
      - id
      - status
      - created_at
      - updated_at
      title: UpdateConversationResponse
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
